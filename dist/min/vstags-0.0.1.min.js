/* 
*  Name: vstags 
*  Description: Tags - AngularJS reusable UI component 
*  Version: 0.0.1 
*  Author: kekeh 
*  Homepage: http://kekeh.github.io/vstags 
*  License: MIT 
*  Date: 2015-08-14 
*/ 
angular.module('template-vstags-0.0.1.html', ['templates/vstags.html']);

angular.module("templates/vstags.html", []).run(["$templateCache", function($templateCache) {
  $templateCache.put("templates/vstags.html",
    "<div class=\"vstags\">\n" +
    "    <div class=\"vstagsgroup\">\n" +
    "        <div class=\"vstagsarea\">\n" +
    "            <div class=\"vsselectedtags\" ng-repeat=\"item in selectedTags track by $index\">\n" +
    "                <div class=\"vstagtext\">{{item}}</div>\n" +
    "                <span class=\"vsiconcross icon icon-cross\" ng-click=\"removeItem(item)\"></span>\n" +
    "            </div>\n" +
    "        </div>\n" +
    "        <span class=\"vsiconplus icon\" ng-class=\"{'icon-plus':!showInput,'icon-check':showInput}\" ng-click=\"addNewItem()\"></span>\n" +
    "    </div>\n" +
    "    <input class=\"vstagsinput\" type=\"text\" input-focus ng-show=\"showInput\" ng-model=\"inputTxt\" ng-keydown=\"keyDown($event)\"/>\n" +
    "</div>");
}]);

angular.module("vstags",["template-vstags-0.0.1.html"]).constant("vstagsConfig",{INPUT_FOCUS_EVENT:"vstags.inputFocusEvent"}).directive("vstags",function(){return{restrict:"EA",templateUrl:"templates/vstags.html",scope:{ngModel:"=?"},controller:["$scope","vstagsConfig",function(a,b){a.config=b,a.inputTxt="",a.inputFocusEvent=function(){a.$broadcast(a.config.INPUT_FOCUS_EVENT)}}],link:function(a,b,c){function d(){a.ngModel=a.selectedTags}function e(b){a.selectedTags.push(b),d()}function f(){a.selectedTags=a.ngModel}a.selectedTags=[],a.showInput=!1,a.addNewItem=function(){a.showInput=!a.showInput,a.showInput?a.inputFocusEvent():""!==a.inputTxt&&(e(a.inputTxt),a.inputTxt="")},a.removeItem=function(b){var c=a.selectedTags.indexOf(b);-1!==c&&(a.selectedTags.splice(c,1),d())},a.keyDown=function(b){13===b.which&&""!==a.inputTxt&&(e(a.inputTxt),a.inputTxt="",a.showInput=!1)},f()}}}).directive("inputFocus",["$timeout",function(a){return{restrict:"A",scope:!1,link:function(b,c){b.$on(b.config.INPUT_FOCUS_EVENT,function(){a(function(){c[0].focus()})})}}}]);